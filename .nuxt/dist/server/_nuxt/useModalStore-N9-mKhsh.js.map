{"version":3,"file":"useModalStore-N9-mKhsh.js","sources":["../../../../components/ui/Inputs.vue","../../../../store/useModalStore.ts"],"sourcesContent":["<!-- @format -->\r\n\r\n<template>\r\n  <div class=\"input\">\r\n    <div class=\"input__w\">\r\n      <input :type=\"type\" :placeholder=\"placeholder\" v-model=\"localValue\" />\r\n    </div>\r\n    <span v-if=\"error\" class=\"input-message\">{{ message }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, defineEmits } from \"vue\";\r\n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    type?: string;\r\n    placeholder?: string;\r\n    message?: string;\r\n    error?: boolean;\r\n    modelValue: string;\r\n  }>(),\r\n  {\r\n    type: \"text\",\r\n    placeholder: \"placeholder\",\r\n    message: \"\",\r\n    error: false,\r\n    modelValue: \"\",\r\n  }\r\n);\r\n\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\n\r\nconst localValue = computed({\r\n  get: () => props.modelValue,\r\n  set: (newValue) => emit(\"update:modelValue\", newValue),\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ninput {\r\n  @include app;\r\n  border: 0.1rem solid #b2b2b2;\r\n  font-size: 1.6rem;\r\n  color: $dark;\r\n  padding: 1.4rem 1.5rem;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { defineStore } from \"pinia\";\r\n\r\ninterface ModalsState {\r\n  auth: boolean;\r\n  callback: boolean;\r\n}\r\n\r\nexport const useModalStore = defineStore(\"modal\", {\r\n  state: (): { modals: ModalsState } => ({\r\n    modals: {\r\n      auth: false,\r\n      callback: false,\r\n    },\r\n  }),\r\n  actions: {\r\n    openModal(modalName: keyof ModalsState) {\r\n      this.modals[modalName] = !this.modals[modalName];\r\n    },\r\n    closeModal(modalName: keyof ModalsState): void {\r\n      this.modals[modalName] = false;\r\n    },\r\n    closeAllModals() {\r\n      Object.keys(this.modals).forEach((modalName) => {\r\n        this.modals[modalName as keyof ModalsState] = false;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const useModalStoreRefs = () => storeToRefs(useModalStore());\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAcA,UAAM,QAAQ;AAiBd,UAAM,OAAO;AAEb,UAAM,aAAa,SAAS;AAAA,MAC1B,KAAK,MAAM,MAAM;AAAA,MACjB,KAAK,CAAC,aAAa,KAAK,qBAAqB,QAAQ;AAAA,IAAA,CACtD;;;;;;;;;;;;;;;;;;;AC7BY,MAAA,gBAAgB,YAAY,SAAS;AAAA,EAChD,OAAO,OAAgC;AAAA,IACrC,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EAAA;AAAA,EAEF,SAAS;AAAA,IACP,UAAU,WAA8B;AACtC,WAAK,OAAO,SAAS,IAAI,CAAC,KAAK,OAAO,SAAS;AAAA,IACjD;AAAA,IACA,WAAW,WAAoC;AACxC,WAAA,OAAO,SAAS,IAAI;AAAA,IAC3B;AAAA,IACA,iBAAiB;AACf,aAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,CAAC,cAAc;AACzC,aAAA,OAAO,SAA8B,IAAI;AAAA,MAAA,CAC/C;AAAA,IACH;AAAA,EACF;AACF,CAAC;AAEM,MAAM,oBAAoB,MAAM,YAAY,cAAe,CAAA;"}