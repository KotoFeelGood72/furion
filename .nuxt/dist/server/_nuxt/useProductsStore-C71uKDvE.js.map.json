{"file":"useProductsStore-C71uKDvE.js","mappings":";;;;;;;AAEa,MAAA,mBAAmB,YAAY,YAAY;AAAA,EACtD,OAAO,OAAO;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ,CAAC;AAAA,EAAA;AAAA,EAEX,SAAS;AAAA,IACP,MAAM,iBAAiB;AACjB,UAAA;AACI,cAAA,EAAE,UAAU;AAClB,cAAM,WAAW,MAAM,MAAM,IAAI,oBAAoB;AACrD,aAAK,WAAW,SAAS;AAAA,eAClB,OAAO;AAAA,MAAC;AAAA,IACnB;AAAA,IACA,iBAAiB,MAAW;AACtB,UAAA,CAAC,KAAK,UAAU;AACX,eAAA;AAAA,MACT;AAEE,aAAA,KAAK,SAAS,KAAK,CAAC,YAAiB,QAAQ,SAAS,IAAI,KAAK;AAAA,IAEnE;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,SAAS,eAAe;AAAA,EAC1B;AACF,CAAC;AAEM,MAAM,uBAAuB,MAAM,YAAY,iBAAkB,CAAA;","names":[],"sources":["../../../../store/useProductsStore.ts"],"sourcesContent":["import { defineStore } from \"pinia\";\r\n\r\nexport const useProductsStore = defineStore(\"products\", {\r\n  state: () => ({\r\n    products: null as any,\r\n    single: {} as any,\r\n  }),\r\n  actions: {\r\n    async getAllProducts() {\r\n      try {\r\n        const { $main } = useNuxtApp();\r\n        const response = await $main.get(\"/all-products.json\");\r\n        this.products = response.data;\r\n      } catch (error) {}\r\n    },\r\n    getProductBySlug(slug: any) {\r\n      if (!this.products) {\r\n        return null;\r\n      }\r\n      return (\r\n        this.products.find((product: any) => product.slug === slug) || null\r\n      );\r\n    },\r\n  },\r\n  persist: {\r\n    storage: persistedState.localStorage,\r\n  },\r\n});\r\n\r\nexport const useProductsStoreRefs = () => storeToRefs(useProductsStore());\r\n"],"version":3}