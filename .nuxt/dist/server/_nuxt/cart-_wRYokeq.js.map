{"version":3,"file":"cart-_wRYokeq.js","sources":["../../../../components/blocks/BlockUserInfo.vue","../../../../composables/useDelivery.ts","../../../../components/blocks/BlockDeliveryCalc.vue","../../../../composables/useYaPay.js","../../../../components/blocks/BlockPayment.vue","../../../../pages/cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"userInfo\">\r\n    <div class=\"userInfo__head\">\r\n      <h3>Информация о покупателе</h3>\r\n      <p v-if=\"!user && !user?.token\">\r\n        Авторизуйтесь, чтобы отслеживать свой заказ\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"user_toggle__w\" v-if=\"!user && !user?.token\">\r\n      <div class=\"user__toggle\">\r\n        <label class=\"switch\">\r\n          <input\r\n            type=\"checkbox\"\r\n            v-model=\"isAuthorized\"\r\n            @change=\"toggleAuthorization\"\r\n          />\r\n          <span class=\"slider round\"></span>\r\n        </label>\r\n        <span>Продолжить без авторизации</span>\r\n      </div>\r\n      <div class=\"userInfo__variant\">\r\n        <div v-if=\"!isAuthorized\" class=\"userInfo_btn__auth\">\r\n          <DefaultBtn\r\n            name=\"Войти или зарегистрироваться\"\r\n            type=\"secondary\"\r\n            color=\"black\"\r\n            size=\"large\"\r\n            @click=\"openModal('auth')\"\r\n          />\r\n        </div>\r\n\r\n        <div v-else class=\"userInfoForm\">\r\n          <div class=\"userInfoForm__input\">\r\n            <p>Имя*</p>\r\n            <Inputs v-model=\"userData.name\" placeholder=\"Поддубная Елена\" />\r\n          </div>\r\n          <div class=\"userInfoForm__input\">\r\n            <p>Телефон*</p>\r\n            <InputPhone\r\n              v-model=\"userData.phone\"\r\n              placeholder=\"+7 (918) 123 45 67\"\r\n            />\r\n          </div>\r\n          <div class=\"userInfoForm__input\">\r\n            <p>E-mail</p>\r\n            <Inputs\r\n              v-model=\"userData.email\"\r\n              placeholder=\"dundub@gmail.com\"\r\n              type=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"userInfoData\" v-else>\r\n      <p><strong>Имя:</strong> {{ userData.name }}</p>\r\n      <p><strong>Телефон:</strong> {{ userData.phone }}</p>\r\n      <p><strong>Email:</strong> {{ userData.email }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch, onMounted } from \"vue\";\r\nimport DefaultBtn from \"../ui/DefaultBtn.vue\";\r\nimport Inputs from \"../ui/Inputs.vue\";\r\nimport InputPhone from \"../ui/InputPhone.vue\";\r\nimport { useUserStoreRefs } from \"~/store/useUserStore\";\r\nimport { useModalStore } from \"~/store/useModalStore\";\r\nimport { useCartStoreRefs } from \"~/store/useCartStore\";\r\n\r\n// Получаем данные из стора\r\nconst { data, user } = useUserStoreRefs();\r\nconst { currentOrder } = useCartStoreRefs();\r\nconst { openModal } = useModalStore();\r\n\r\nconst isAuthorized = ref(false);\r\n\r\n// Данные пользователя по умолчанию\r\nconst userData = ref({\r\n  name: \"Константинопольская Кристина\",\r\n  phone: \"+7 (918) 123 45 67\",\r\n  email: \"dundub@gmail.com\",\r\n});\r\n\r\n// Если данные пользователя есть в сторе, используем их\r\nwatch(\r\n  () => user.value,\r\n  (newUser) => {\r\n    if (newUser) {\r\n      userData.value = {\r\n        name: data.value?.meta?.billing_first_name?.[0] || newUser.name,\r\n        phone: data.value?.meta?.billing_phone?.[0] || newUser.phone,\r\n        email: data.value?.meta?.billing_email?.[0] || newUser.email,\r\n      };\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n// Метод для переключения авторизации\r\nconst toggleAuthorization = () => {\r\n  if (!isAuthorized.value) {\r\n    // Если пользователь не авторизован, возвращаем данные по умолчанию\r\n    userData.value = {\r\n      name: \"Константинопольская Кристина\",\r\n      phone: \"+7 (918) 123 45 67\",\r\n      email: \"dundub@gmail.com\",\r\n    };\r\n  }\r\n};\r\n\r\n// Обновление данных заказа при изменении userData и передача в billing и shipping\r\nwatch(\r\n  userData,\r\n  (newUserData) => {\r\n    currentOrder.value = {\r\n      ...currentOrder.value,\r\n      user: {\r\n        name: newUserData.name,\r\n        phone: newUserData.phone,\r\n        email: newUserData.email,\r\n      },\r\n      billing: {\r\n        ...currentOrder.value.billing, // Сохраняем уже существующие данные в billing\r\n        first_name: newUserData.name,\r\n        phone: newUserData.phone,\r\n        email: newUserData.email,\r\n      },\r\n      shipping: {\r\n        ...currentOrder.value.shipping, // Сохраняем уже существующие данные в shipping\r\n        first_name: newUserData.name,\r\n        phone: newUserData.phone,\r\n        email: newUserData.email,\r\n      },\r\n    };\r\n  },\r\n  { deep: true } // Чтобы отслеживать все изменения внутри объекта userData\r\n);\r\n\r\n// Инициализация данных заказа при монтировании компонента\r\nonMounted(() => {\r\n  currentOrder.value = {\r\n    ...currentOrder.value,\r\n    user: {\r\n      name: userData.value.name,\r\n      phone: userData.value.phone,\r\n      email: userData.value.email,\r\n    },\r\n    billing: {\r\n      ...currentOrder.value.billing, // Сохраняем уже существующие данные в billing при монтировании\r\n      first_name: userData.value.name,\r\n      phone: userData.value.phone,\r\n      email: userData.value.email,\r\n    },\r\n    shipping: {\r\n      ...currentOrder.value.shipping, // Сохраняем уже существующие данные в shipping при монтировании\r\n      first_name: userData.value.name,\r\n      phone: userData.value.phone,\r\n      email: userData.value.email,\r\n    },\r\n  };\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.user__toggle {\r\n  @include flex-start;\r\n  gap: 1.7rem;\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 6.3rem;\r\n  height: 3.4rem;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #b6b6b6;\r\n  transition: 0.4s;\r\n  border-radius: 2rem;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  width: 2.4rem;\r\n  height: 2.4rem;\r\n  left: 0.5rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: $white;\r\n  transition: 0.4s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: $dark;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  left: 3.4rem;\r\n}\r\n\r\n.userInfo__head {\r\n  h3 {\r\n    font-size: 3rem;\r\n    font-family: $font_2;\r\n    margin-bottom: 2.5rem;\r\n    font-weight: 500;\r\n\r\n    @include bp($point_2) {\r\n      font-size: 2.4rem;\r\n    }\r\n  }\r\n  p {\r\n    font-size: 1.8rem;\r\n    margin-bottom: 3.5rem;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n}\r\n\r\n.user__toggle {\r\n  margin-bottom: 5rem;\r\n}\r\n\r\n.userInfo_btn__auth {\r\n  display: inline-flex;\r\n}\r\n\r\n.userInfoForm {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n  max-width: 53.6rem;\r\n\r\n  p {\r\n    margin-bottom: 1.5rem;\r\n    font-size: 1.8rem;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  &:deep(.phone_input) {\r\n    input {\r\n      max-height: 4.8rem;\r\n    }\r\n  }\r\n}\r\n\r\n.userInfoData {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n  @include bp($point_2) {\r\n    gap: 1.5rem;\r\n  }\r\n  p {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { ref } from \"vue\";\r\nimport axios from \"axios\";\r\nimport deliveryData from \"~/data/DeliveryPrice.json\";\r\n\r\nconst query = ref<any>(\"\");\r\nconst suggestions = ref<any>([]);\r\nconst selectedAddress = ref<any>(\"\");\r\nconst destinationCoordinates = ref<any>(null);\r\nconst deliveryPrice = ref(0);\r\n\r\nexport const useDelivery = () => {\r\n  const fetchSuggestions = async () => {\r\n    if (query.value.length > 1) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address\",\r\n          {\r\n            query: query.value,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n              Authorization: `Token cab538d49b7cbc9ae1d154721028bbbbb0130b57`,\r\n            },\r\n          }\r\n        );\r\n        suggestions.value = response.data.suggestions;\r\n      } catch (error) {\r\n        console.error(\"Error fetching suggestions:\", error);\r\n      }\r\n    } else {\r\n      suggestions.value = [];\r\n    }\r\n  };\r\n\r\n  const selectSuggestion = (suggestion: any) => {\r\n    query.value = suggestion.value;\r\n    selectedAddress.value = JSON.stringify(suggestion.data);\r\n    destinationCoordinates.value =\r\n      suggestion.data.geo_lat && suggestion.data.geo_lon\r\n        ? [suggestion.data.geo_lon, suggestion.data.geo_lat]\r\n        : null;\r\n    suggestions.value = [];\r\n\r\n    // Вызываем расчет доставки\r\n    calculateDeliveryPrice();\r\n  };\r\n\r\n  const calculateDeliveryPrice = () => {\r\n    const addressData = JSON.parse(selectedAddress.value);\r\n    let price = 0;\r\n\r\n    // Проверяем наличие города или области в предопределенных списках\r\n    if (\r\n      addressData.region_with_type.includes(\"Москва\") ||\r\n      addressData.region_with_type.includes(\"Московская обл\")\r\n    ) {\r\n      price = deliveryData.regions[\"Москва и Московская область\"].price;\r\n    } else {\r\n      Object.keys(deliveryData.regions).forEach((region: any) => {\r\n        const regionData = deliveryData.regions[region];\r\n        if (regionData.cities && regionData.cities[addressData.city]) {\r\n          price = regionData.cities[addressData.city];\r\n        }\r\n      });\r\n    }\r\n\r\n    // Если цена не установлена, считаем по километрам\r\n    if (price === 0 && destinationCoordinates.value) {\r\n      const defaultPrice = deliveryData.default;\r\n      const distanceKm = calculateDistanceFromCoordinates(\r\n        destinationCoordinates.value\r\n      );\r\n      price = defaultPrice.base_price + distanceKm * defaultPrice.price_per_km;\r\n    }\r\n\r\n    deliveryPrice.value = price;\r\n  };\r\n\r\n  const calculateDistanceFromCoordinates = (coordinates: [number, number]) => {\r\n    const exampleDistanceKm = 10; // Placeholder: добавить реальный расчет дистанции\r\n    return exampleDistanceKm;\r\n  };\r\n\r\n  return {\r\n    query,\r\n    suggestions,\r\n    selectedAddress,\r\n    destinationCoordinates,\r\n    deliveryPrice,\r\n    fetchSuggestions,\r\n    selectSuggestion,\r\n    calculateDeliveryPrice,\r\n  };\r\n};\r\n","<template>\r\n  <div class=\"delivery\">\r\n    <div class=\"delivery__address\">\r\n      <h3>Доставка</h3>\r\n      <p>Адрес</p>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"query\"\r\n        @input=\"fetchSuggestions\"\r\n        placeholder=\"Введите адрес\"\r\n      />\r\n      <ul class=\"delivery_siqqestion\" v-if=\"suggestions.length\">\r\n        <li\r\n          v-for=\"suggestion in suggestions\"\r\n          :key=\"suggestion\"\r\n          @click=\"selectSuggestion(suggestion)\"\r\n        >\r\n          {{ suggestion.value }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useDelivery } from \"~/composables/useDelivery\";\r\nimport { useCartStoreRefs } from \"~/store/useCartStore\";\r\n\r\nconst {\r\n  query,\r\n  suggestions,\r\n  deliveryPrice,\r\n  fetchSuggestions,\r\n  selectSuggestion,\r\n  selectedAddress,\r\n} = useDelivery();\r\nconst { currentOrder } = useCartStoreRefs();\r\n\r\nwatch([selectedAddress], (newAddress) => {\r\n  const addressData = JSON.parse(newAddress);\r\n  currentOrder.value = {\r\n    ...currentOrder.value,\r\n    shipping: {\r\n      ...currentOrder.value.shipping,\r\n      address_1: `${addressData.street_with_type || \"\"} ${\r\n        addressData.house || \"\"\r\n      }`,\r\n      city: addressData.city || \"\",\r\n      postcode: addressData.postal_code || \"\",\r\n      country: addressData.country_iso_code || \"RU\",\r\n      region: addressData.region_with_type || \"\",\r\n      price: deliveryPrice.value,\r\n    },\r\n    billing: {\r\n      ...currentOrder.value.billing,\r\n      address_1: `${addressData.street_with_type || \"\"} ${\r\n        addressData.house || \"\"\r\n      }`,\r\n      city: addressData.city || \"\",\r\n      postcode: addressData.postal_code || \"\",\r\n      country: addressData.country_iso_code || \"RU\",\r\n      region: addressData.region_with_type || \"\",\r\n    },\r\n  };\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.delivery {\r\n  background-color: $white;\r\n  padding: 1.7rem 2.4rem 3.4rem 2.4rem;\r\n  @include bp($point_2) {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 3rem;\r\n    margin-bottom: 3rem;\r\n    font-weight: 500;\r\n    font-family: $font_2;\r\n    @include bp($point_2) {\r\n      font-size: 2.4rem;\r\n    }\r\n  }\r\n  .delivery__address {\r\n    max-width: 53.6rem;\r\n    margin-bottom: 4rem;\r\n    position: relative;\r\n    & > p {\r\n      font-size: 1.8rem;\r\n      margin-bottom: 1rem;\r\n      font-family: $font_2;\r\n    }\r\n\r\n    input {\r\n      @include app;\r\n      width: 100%;\r\n      min-height: 4.8rem;\r\n      border: 0.1rem solid #b2b2b2;\r\n      padding: 1.2rem 1.5rem;\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n}\r\n\r\n.delivery_siqqestion {\r\n  position: absolute;\r\n  border: 0.1rem solid #b2b2b2;\r\n  border-top: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: $white;\r\n  max-height: 30rem;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  background-color: $white;\r\n  z-index: 99;\r\n  li {\r\n    padding: 1.2rem 1.5rem;\r\n    transition: all 0.3s ease-in-out;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: $light;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar {\r\n    width: 0.4rem;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: $gray;\r\n  }\r\n}\r\n\r\n.delivery__method {\r\n  p {\r\n    margin-bottom: 2rem;\r\n    font-size: 1.8rem;\r\n    color: $dark;\r\n    font-family: $font_2;\r\n  }\r\n}\r\n\r\n.delivery__method-item {\r\n  input:checked + label {\r\n    &:after {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n  label {\r\n    cursor: pointer;\r\n    @include flex-start;\r\n    position: relative;\r\n    padding-left: 3.1rem;\r\n    font-size: 1.8rem;\r\n\r\n    span {\r\n      min-width: 22.8rem;\r\n      margin-right: 3.8rem;\r\n    }\r\n\r\n    img {\r\n      width: 5.3rem;\r\n      @include flex-start;\r\n      margin-right: 1rem;\r\n    }\r\n    &:before {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0%;\r\n      width: 1.6rem;\r\n      height: 1.6rem;\r\n      border: 0.1rem solid $brown;\r\n      border-radius: 100%;\r\n      content: \"\";\r\n      transform: translateY(-50%);\r\n    }\r\n    &:after {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0.3rem;\r\n      transform: translateY(-50%);\r\n      width: 1rem;\r\n      height: 1rem;\r\n      content: \"\";\r\n      opacity: 0;\r\n      visibility: hidden;\r\n      transition: all 0.3s ease-in-out;\r\n      background-position: center center;\r\n      background-color: $brown;\r\n      border-radius: 100%;\r\n    }\r\n  }\r\n\r\n  input {\r\n    display: none;\r\n  }\r\n  &:not(:last-child) {\r\n    margin-bottom: 2rem;\r\n  }\r\n}\r\n</style>\r\n","import { useCartStore } from \"~/store/useCartStore\";\r\n\r\nexport function useYaPay() {\r\n  const { createOrder } = useCartStore();\r\n  const activeSession = ref(null);\r\n\r\n  // Функция создания платежной сессии\r\n  function createPaymentSession({\r\n    amount,\r\n    methods,\r\n    buttonContainerId,\r\n    widgetContainerId,\r\n  }) {\r\n    // Если сессия уже существует, удаляем её и кнопки\r\n    if (activeSession.value) {\r\n      try {\r\n        activeSession.value.destroy(); // Удаляем сессию и все связанные кнопки и виджеты\r\n      } catch (error) {\r\n        console.error(\"Ошибка при уничтожении сессии:\", error);\r\n      }\r\n      activeSession.value = null;\r\n    }\r\n\r\n    const paymentData = {\r\n      env: window.YaPay.Sandbox,\r\n      version: 4,\r\n      currencyCode: window.YaPay.CurrencyCode.Rub,\r\n      merchantId: \"4d715c56-1ac9-49bc-9330-889e3487b2c1\",\r\n      totalAmount: amount,\r\n      availablePaymentMethods: methods,\r\n    };\r\n\r\n    console.log(paymentData.totalAmount);\r\n    window.YaPay.createSession(paymentData, {\r\n      onPayButtonClick: async () => {\r\n        createOrder();\r\n      },\r\n    })\r\n      .then((paymentSession) => {\r\n        activeSession.value = paymentSession;\r\n\r\n        // Монтируем кнопку\r\n        const buttonContainer = document.querySelector(buttonContainerId);\r\n        if (buttonContainer) {\r\n          activeSession.value.mountButton(buttonContainer, {\r\n            type: methods.includes(\"SPLIT\")\r\n              ? window.YaPay.ButtonType.Split\r\n              : window.YaPay.ButtonType.Pay,\r\n            theme: window.YaPay.ButtonTheme.Black,\r\n            width: window.YaPay.ButtonWidth.Auto,\r\n          });\r\n        } else {\r\n          console.error(\"Контейнер для кнопки не найден:\", buttonContainerId);\r\n        }\r\n\r\n        // Если метод SPLIT, также монтируем виджет\r\n        if (methods.includes(\"SPLIT\")) {\r\n          const widgetContainer = document.querySelector(widgetContainerId);\r\n          if (widgetContainer) {\r\n            // Очищаем контейнер перед монтированием нового виджета\r\n            widgetContainer.innerHTML = \"\";\r\n\r\n            activeSession.value.mountWidget(widgetContainer, {\r\n              widgetType: window.YaPay.WidgetType.Info,\r\n              widgetTheme: window.YaPay.WidgetTheme.Light,\r\n              borderRadius: 8,\r\n            });\r\n          } else {\r\n            console.error(\r\n              \"Контейнер для виджета не найден:\",\r\n              widgetContainerId\r\n            );\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Ошибка создания сессии\", err);\r\n      });\r\n  }\r\n\r\n  // Функция удаления активной сессии и кнопок\r\n  function resetPaymentSession() {\r\n    if (activeSession.value) {\r\n      try {\r\n        activeSession.value.destroy(); // Попробуйте добавить блок try-catch для отлова ошибок\r\n      } catch (error) {\r\n        console.error(\"Ошибка при уничтожении сессии:\", error);\r\n      }\r\n      activeSession.value = null;\r\n    }\r\n  }\r\n\r\n  // Функция удаления кнопки и пересоздания новой\r\n  function resetPaymentButton(buttonContainerId, amount, methods) {\r\n    const buttonContainer = document.querySelector(buttonContainerId);\r\n\r\n    if (activeSession.value && buttonContainer) {\r\n      try {\r\n        activeSession.value.unmountButton(buttonContainer);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при удалении кнопки:\", error);\r\n      }\r\n    }\r\n\r\n    // Пересоздаем сессию и монтируем новую кнопку\r\n    createPaymentSession({ amount, methods, buttonContainerId });\r\n  }\r\n\r\n  return {\r\n    createPaymentSession,\r\n    resetPaymentSession,\r\n    resetPaymentButton, // Добавляем функцию в возвращаемый объект\r\n  };\r\n}\r\n","<template>\r\n  <div class=\"payment\">\r\n    <div class=\"payment__address\">\r\n      <h3>Выберите способ оплаты</h3>\r\n    </div>\r\n    <div class=\"payment__method\">\r\n      <div\r\n        v-for=\"method in paymentMethods\"\r\n        :key=\"method.name\"\r\n        class=\"payment__method-item\"\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          :id=\"method.name\"\r\n          v-model=\"selectedMethod\"\r\n          :value=\"method.name\"\r\n        />\r\n        <label :for=\"method.name\">\r\n          <span>{{ method.name }}</span>\r\n          <img v-if=\"method.logo\" :src=\"method.logo\" alt=\"\" />\r\n        </label>\r\n      </div>\r\n      <div class=\"split__w\" v-if=\"selectedMethod === 'Оплатить'\">\r\n        <div id=\"split-widget\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onMounted } from \"vue\";\r\nimport { useCartStoreRefs } from \"~/store/useCartStore\";\r\nimport { useYaPay } from \"~/composables/useYaPay\";\r\n\r\nconst selectedMethod = ref(\"Оплата картой онлайн или через СБП\");\r\nconst { currentOrder } = useCartStoreRefs();\r\nconst { createPaymentSession, resetPaymentSession } = useYaPay();\r\nconst paymentMethods = [\r\n  {\r\n    name: \"Оплата картой онлайн или через СБП\",\r\n  },\r\n  { name: \"Оплатить\", logo: \"/img/split.png\" },\r\n];\r\n\r\n// Обновление сессии оплаты\r\nconst updateYaPaySession = () => {\r\n  const amount = currentOrder.value.price || 0;\r\n\r\n  // Сбрасываем предыдущую сессию, если она есть\r\n  resetPaymentSession();\r\n\r\n  if (selectedMethod.value === \"Оплатить\") {\r\n    // Инициализируем сессию сплит-оплаты\r\n    createPaymentSession({\r\n      amount,\r\n      methods: [\"SPLIT\"],\r\n      buttonContainerId: \"#payButton\", // Кнопка оплаты\r\n      widgetContainerId: \"#split-widget\", // Информационный виджет сплита\r\n    });\r\n  } else {\r\n    // Инициализируем обычную оплату\r\n    createPaymentSession({\r\n      amount,\r\n      methods: [\"CARD\"],\r\n      buttonContainerId: \"#payButton\", // Кнопка мгновенной оплаты\r\n    });\r\n  }\r\n};\r\n\r\n// Следим за изменением способа оплаты и пересоздаем сессии\r\nwatch(selectedMethod, () => {\r\n  updateYaPaySession();\r\n});\r\n\r\n// Пересоздание сессии при изменении цены\r\nwatch(\r\n  () => currentOrder.value.price,\r\n  () => {\r\n    updateYaPaySession();\r\n  }\r\n);\r\n\r\nonMounted(() => {\r\n  updateYaPaySession();\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.payment {\r\n  background-color: $white;\r\n  padding: 1.7rem 2.4rem 3.4rem 2.4rem;\r\n  @include bp($point_2) {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 3rem;\r\n    margin-bottom: 3rem;\r\n    font-family: $font_2;\r\n    font-weight: 500;\r\n    @include bp($point_2) {\r\n      font-size: 2.4rem;\r\n    }\r\n  }\r\n}\r\n\r\n.payment__method-item {\r\n  input:checked + label {\r\n    &:after {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n  label {\r\n    cursor: pointer;\r\n    @include flex-start;\r\n    position: relative;\r\n    padding-left: 3.1rem;\r\n    font-size: 1.8rem;\r\n\r\n    span {\r\n      margin-right: 1.2rem;\r\n    }\r\n\r\n    img {\r\n      @include flex-start;\r\n    }\r\n    &:before {\r\n      position: absolute;\r\n      top: 45%;\r\n      left: 0%;\r\n      width: 1.6rem;\r\n      height: 1.6rem;\r\n      border: 0.1rem solid $brown;\r\n      border-radius: 100%;\r\n      content: \"\";\r\n      transform: translateY(-50%);\r\n      @include bp($point_2) {\r\n        transform: translateY(0);\r\n        top: 0.2rem;\r\n      }\r\n    }\r\n    &:after {\r\n      position: absolute;\r\n      top: 45%;\r\n      left: 0.3rem;\r\n      transform: translateY(-50%);\r\n      width: 1rem;\r\n      height: 1rem;\r\n      content: \"\";\r\n      opacity: 0;\r\n      visibility: hidden;\r\n      transition: all 0.3s ease-in-out;\r\n      background-position: center center;\r\n      background-color: $brown;\r\n      border-radius: 100%;\r\n      @include bp($point_2) {\r\n        top: 0.5rem;\r\n        transform: translateY(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  input {\r\n    display: none;\r\n  }\r\n  &:not(:last-child) {\r\n    margin-bottom: 1rem;\r\n  }\r\n}\r\n\r\n.split__w {\r\n  max-width: 50rem;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"cart\">\r\n    <div class=\"container\">\r\n      <div class=\"cart_main\">\r\n        <div class=\"cart_main__content\">\r\n          <h2>Корзина ({{ carts.length }})</h2>\r\n          <div class=\"cart_products__w\">\r\n            <div class=\"cart_products__head\">\r\n              <div class=\"cart_select__all\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"select-all\"\r\n                  id=\"select-all\"\r\n                  :checked=\"isAllSelected\"\r\n                  @change=\"toggleSelectAll\"\r\n                />\r\n                <label for=\"select-all\">Выбрать все</label>\r\n              </div>\r\n              <div\r\n                class=\"cart_delete\"\r\n                :class=\"{ active: hasSelectedItems }\"\r\n                @click=\"deleteSelectedItems\"\r\n              >\r\n                Удалить\r\n              </div>\r\n            </div>\r\n            <ul class=\"cart_products__list\">\r\n              <li\r\n                class=\"cart_products__item\"\r\n                v-for=\"(item, i) in carts\"\r\n                :key=\"'carts-item-' + i\"\r\n              >\r\n                <div class=\"cart_select__single\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"single-cart\"\r\n                    :id=\"item.id\"\r\n                    :checked=\"selectedItems.includes(item.id)\"\r\n                    @change=\"toggleSelectItem(item.id)\"\r\n                  />\r\n                  <label :for=\"item.id\"></label>\r\n                </div>\r\n                <div class=\"cart_item__img\">\r\n                  <img :src=\"item.thumbnail\" alt=\"\" />\r\n                </div>\r\n                <div class=\"cart_item__content\">\r\n                  <h3>{{ item.title }}</h3>\r\n                  <ul>\r\n                    <li>\r\n                      <p>Цвет:</p>\r\n                      <span>{{ item.color }}</span>\r\n                    </li>\r\n                    <li>\r\n                      <p>Размеры:</p>\r\n                      <span>180х150</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"cart_item__action\">\r\n                  <div class=\"cart_item__price\">{{ item.price }} Р</div>\r\n                  <Qty\r\n                    :initialQuantity=\"item.quantity\"\r\n                    @updateQuantity=\"\r\n                      (quantity) => updateQuantity(item, quantity)\r\n                    \"\r\n                    @clear=\"removeCartItem(item.id)\"\r\n                  />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"list-block\">\r\n            <BlockUserInfo />\r\n            <BlockDeliveryCalc />\r\n            <BlockPayment />\r\n          </div>\r\n        </div>\r\n        <div class=\"cart_totals\">\r\n          <div class=\"cart_total__head\">\r\n            <span>Итого</span>\r\n            <p>{{ totalPrice }} P</p>\r\n          </div>\r\n          <div class=\"cart_total__body\">\r\n            <ul>\r\n              <li>\r\n                <span>{{ carts.length }} товара(ов) на сумму</span>\r\n                <p>{{ totalPrice }}</p>\r\n              </li>\r\n              <li>\r\n                <span>Доставка</span>\r\n                <p>{{ deliveryPrice }}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div id=\"payButton\"></div>\r\n          <div class=\"cart_total__privacy\">\r\n            Нажимая кнопку 'Оформить заказ', Вы принимаете условия\r\n            соответствующей\r\n            <NuxtLink to=\"/\">оферты: Оферты для физических лиц</NuxtLink> или\r\n            <NuxtLink to=\"/\"> Оферты для юридических лиц и ИП</NuxtLink>,\r\n            Политики конфиденциальности, а также даете Согласие на\r\n            <NuxtLink to=\"/\"\r\n              >обработку Ваших персональных данных и их передачу.</NuxtLink\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// import DefaultBtn from \"~/components/ui/DefaultBtn.vue\";\r\nimport Qty from \"~/components/ui/Qty.vue\";\r\nimport BlockUserInfo from \"~/components/blocks/BlockUserInfo.vue\";\r\nimport BlockDeliveryCalc from \"~/components/blocks/BlockDeliveryCalc.vue\";\r\nimport BlockPayment from \"~/components/blocks/BlockPayment.vue\";\r\nimport { ref, computed, watch, onMounted } from \"vue\";\r\nimport { useCartStoreRefs, useCartStore } from \"~/store/useCartStore\";\r\nimport { useDelivery } from \"~/composables/useDelivery\";\r\n\r\n// Получаем данные корзины и текущего заказа\r\nconst { carts, currentOrder } = useCartStoreRefs();\r\nconst { updateCartItem, removeCartItem, createOrder } = useCartStore();\r\nconst { deliveryPrice } = useDelivery();\r\n\r\nconst selectedItems = ref<string[]>([]);\r\n\r\n// Вычисляем, есть ли выбранные товары\r\nconst hasSelectedItems = computed(() => {\r\n  return selectedItems.value.length > 0;\r\n});\r\n\r\n// Обновление количества товара в корзине\r\nconst updateQuantity = (item: any, quantity: number) => {\r\n  item.quantity = quantity;\r\n  updateCartItem(item);\r\n};\r\n\r\n// Удаление выбранных товаров из корзины\r\nconst deleteSelectedItems = () => {\r\n  selectedItems.value.forEach((itemId) => {\r\n    removeCartItem(itemId);\r\n  });\r\n  selectedItems.value = [];\r\n};\r\n\r\n// Обработка выбора товара\r\nconst toggleSelectItem = (itemId: string) => {\r\n  if (selectedItems.value.includes(itemId)) {\r\n    selectedItems.value = selectedItems.value.filter((id) => id !== itemId);\r\n  } else {\r\n    selectedItems.value.push(itemId);\r\n  }\r\n};\r\n\r\n// Выбор всех товаров\r\nconst toggleSelectAll = (event: Event) => {\r\n  if ((event.target as HTMLInputElement).checked) {\r\n    selectedItems.value = carts.value.map((item: any) => item.id);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\n// Проверка, все ли товары выбраны\r\nconst isAllSelected = computed(() => {\r\n  return (\r\n    carts.value.length > 0 && selectedItems.value.length === carts.value.length\r\n  );\r\n});\r\n\r\n// Подсчет общей стоимости корзины\r\nconst totalPrice = computed(() => {\r\n  return carts.value.reduce((total: any, item: any) => {\r\n    return total + item.price * item.quantity;\r\n  }, 0);\r\n});\r\n\r\nconst setLineItemsAndPrice = () => {\r\n  const lineItems = carts.value.map((item: any) => ({\r\n    product_id: item.id,\r\n    name: item.title,\r\n    quantity: item.quantity,\r\n    price: item.price,\r\n    color: item.color,\r\n    thumbnail: item.thumbnail,\r\n  }));\r\n\r\n  const totalOrderPrice = carts.value.reduce((total: any, item: any) => {\r\n    return total + item.price * item.quantity;\r\n  }, 0);\r\n\r\n  currentOrder.value = {\r\n    ...currentOrder.value,\r\n    line_items: lineItems,\r\n    price: totalOrderPrice,\r\n  };\r\n\r\n  // // Проверяем, определена ли функция updateYaPayPrice\r\n  // if (typeof window.updateYaPayPrice === \"function\") {\r\n  //   console.log(\"Updating YaPay price:\", totalOrderPrice);\r\n  //   window.updateYaPayPrice(totalOrderPrice);\r\n  // } else {\r\n  //   console.error(\"updateYaPayPrice is not defined\");\r\n  // }\r\n};\r\n\r\n// Следим за изменениями в корзине и обновляем line_items и price\r\nwatch(carts, setLineItemsAndPrice, { deep: true });\r\n\r\n// Инициализация line_items и цены при монтировании компонента\r\nonMounted(() => {\r\n  setLineItemsAndPrice();\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.cart {\r\n  background-color: $light;\r\n}\r\n.cart_main {\r\n  padding-top: calc($header + 10rem);\r\n  @include flex-start;\r\n  gap: 16rem;\r\n  align-items: flex-start;\r\n  padding-bottom: 13.5rem;\r\n  @include bp($point_2) {\r\n    padding-top: 10.5rem;\r\n    padding-bottom: 3rem;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n  }\r\n}\r\n\r\n.cart_main__content {\r\n  flex-grow: 1;\r\n  h2 {\r\n    font-size: 5rem;\r\n    margin-bottom: 4rem;\r\n    @include bp($point_2) {\r\n      font-size: 3rem;\r\n      margin-bottom: 2.5rem;\r\n    }\r\n  }\r\n}\r\n\r\n.cart_totals {\r\n  max-width: 43.5rem;\r\n  position: sticky;\r\n  top: 2rem;\r\n  right: 0;\r\n}\r\n\r\n.cart_products__head {\r\n  @include flex-space;\r\n  gap: 2rem;\r\n  margin-bottom: 3.5rem;\r\n  @include bp($point_2) {\r\n    margin-bottom: 3rem;\r\n  }\r\n}\r\n\r\n.cart_total__head {\r\n  @include flex-space;\r\n  gap: 2rem;\r\n  margin-bottom: 4rem;\r\n  @include bp($point_2) {\r\n    margin-bottom: 2rem;\r\n  }\r\n  span,\r\n  p {\r\n    font-size: 4rem;\r\n    font-family: $font_2;\r\n    @include bp($point_2) {\r\n      font-size: 2.4rem;\r\n    }\r\n  }\r\n\r\n  p {\r\n    @include bp($point_2) {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n}\r\n\r\n.cart_total__body {\r\n  ul {\r\n    margin-bottom: 4.5rem;\r\n    @include bp($point_2) {\r\n      margin-bottom: 2.7rem;\r\n    }\r\n  }\r\n  li {\r\n    @include flex-space;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 2rem;\r\n      @include bp($point_2) {\r\n        margin-bottom: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.cart_total__privacy {\r\n  padding-top: 3.5rem;\r\n  font-size: 1.6rem;\r\n  @include bp($point_2) {\r\n    font-size: 1.2rem;\r\n    padding-top: 2rem;\r\n  }\r\n  a {\r\n    color: $brown;\r\n  }\r\n}\r\n\r\n.cart_select__all {\r\n  input {\r\n    display: none;\r\n    &:checked ~ label {\r\n      &:after {\r\n        opacity: 1;\r\n        visibility: visible;\r\n      }\r\n    }\r\n  }\r\n  label {\r\n    color: $brown;\r\n    position: relative;\r\n    padding-left: 3.1rem;\r\n    font-size: 1.6rem;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    &:before {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0;\r\n      transform: translateY(-50%);\r\n      width: 1.6rem;\r\n      height: 1.6rem;\r\n      border: 0.1rem solid $brown;\r\n      content: \"\";\r\n    }\r\n    &:after {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0;\r\n      transform: translateY(-50%);\r\n      width: 1.6rem;\r\n      height: 1.6rem;\r\n      content: \"\";\r\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24'%3E%3Cpath fill='%23946b55' d='M18.71 7.21a1 1 0 0 0-1.42 0l-7.45 7.46l-3.13-3.14A1 1 0 1 0 5.29 13l3.84 3.84a1 1 0 0 0 1.42 0l8.16-8.16a1 1 0 0 0 0-1.47'/%3E%3C/svg%3E\");\r\n      opacity: 0;\r\n      visibility: hidden;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n  }\r\n}\r\n.cart_delete {\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  line-height: 110%;\r\n  transition: all 0.3s ease-in-out;\r\n  color: $gray;\r\n  pointer-events: none;\r\n  border-bottom: 0.1rem solid $light;\r\n  &.active {\r\n    pointer-events: all;\r\n    color: #b23e00;\r\n    border-bottom: 0.1rem solid #b23e00;\r\n  }\r\n  &:hover {\r\n    border-bottom: 0.1rem solid transparent;\r\n  }\r\n}\r\n\r\n.cart_products__item {\r\n  @include flex-start;\r\n  background-color: $white;\r\n  padding: 2rem 4rem 2rem 5.1rem;\r\n  gap: 5rem;\r\n  position: relative;\r\n\r\n  @include bp($point_2) {\r\n    gap: 1rem;\r\n    padding: 1.5rem 3.7rem 1.5rem 1.5rem;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n  }\r\n}\r\n\r\n.cart_item__img {\r\n  min-width: 23.3rem;\r\n  width: 23.3rem;\r\n  height: 17.9rem;\r\n  @include flex-center;\r\n\r\n  @include bp($point_2) {\r\n    min-width: 6.5rem;\r\n    width: 6.5rem;\r\n    height: 4.9rem;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n\r\n.cart_item__content {\r\n  // max-width: 41.6rem;\r\n  flex-grow: 1;\r\n  @include bp($point_2) {\r\n    max-width: calc(100% - 7.5rem);\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 2rem;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.8rem;\r\n    @include bp($point_2) {\r\n      gap: 0.2rem;\r\n    }\r\n    li {\r\n      @include flex-start;\r\n      gap: 1rem;\r\n      @include bp($point_2) {\r\n        font-size: 1.4rem;\r\n        gap: 0.5rem;\r\n      }\r\n      p {\r\n        font-family: $font_2;\r\n      }\r\n      span {\r\n        color: $brown;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.cart_item__price {\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  font-family: $font_2;\r\n  margin-bottom: 3.2rem;\r\n  @include bp($point_2) {\r\n    margin-bottom: 0;\r\n    font-size: 2rem;\r\n  }\r\n}\r\n\r\n.cart_products__w {\r\n  margin-bottom: 3.5rem;\r\n  @include bp($point_2) {\r\n    margin-bottom: 3rem;\r\n  }\r\n}\r\n\r\n.userInfo {\r\n  background-color: $white;\r\n  padding: 1.7rem 2.4rem 3.4rem 2.4rem;\r\n  @include bp($point_2) {\r\n    padding: 1.5rem;\r\n  }\r\n}\r\n\r\n.list-block {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3.5rem;\r\n  @include bp($point_2) {\r\n    margin-bottom: 0;\r\n    gap: 3rem;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.cart_select__single {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 1.5rem;\r\n  @include bp($point_2) {\r\n    top: 1.6rem;\r\n    right: 1.5rem;\r\n    left: auto;\r\n    transform: translate(0);\r\n    // width: 100%;\r\n    // height: 100%;\r\n  }\r\n  input {\r\n    display: none;\r\n    &:checked + label:after {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  label {\r\n    border: 0.1rem solid $brown;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    @include flex-center;\r\n    cursor: pointer;\r\n    &:after {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 0;\r\n      transform: translateY(-50%);\r\n      width: 1.6rem;\r\n      height: 1.6rem;\r\n      content: \"\";\r\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24'%3E%3Cpath fill='%23946b55' d='M18.71 7.21a1 1 0 0 0-1.42 0l-7.45 7.46l-3.13-3.14A1 1 0 1 0 5.29 13l3.84 3.84a1 1 0 0 0 1.42 0l8.16-8.16a1 1 0 0 0 0-1.47'/%3E%3C/svg%3E\");\r\n      opacity: 0;\r\n      visibility: hidden;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n  }\r\n}\r\n\r\n.cart_products__list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2.5rem;\r\n\r\n  @include bp($point_2) {\r\n    gap: 1.5rem;\r\n  }\r\n}\r\n\r\n.cart_item__action {\r\n  @include bp($point_2) {\r\n    width: 100%;\r\n    @include flex-start;\r\n    gap: 3rem;\r\n    padding-left: 7.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"names":["query","suggestions","deliveryPrice","selectedAddress"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA,UAAM,EAAE,MAAM,KAAK,IAAI,iBAAiB;AAClC,UAAA,EAAE,iBAAiB;AACnB,UAAA,EAAE,cAAc;AAEhB,UAAA,eAAe,IAAI,KAAK;AAG9B,UAAM,WAAW,IAAI;AAAA,MACnB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,IAAA,CACR;AAGD;AAAA,MACE,MAAM,KAAK;AAAA,MACX,CAAC,YAAY;;AACX,YAAI,SAAS;AACX,mBAAS,QAAQ;AAAA,YACf,QAAM,sBAAK,UAAL,mBAAY,SAAZ,mBAAkB,uBAAlB,mBAAuC,OAAM,QAAQ;AAAA,YAC3D,SAAO,sBAAK,UAAL,mBAAY,SAAZ,mBAAkB,kBAAlB,mBAAkC,OAAM,QAAQ;AAAA,YACvD,SAAO,sBAAK,UAAL,mBAAY,SAAZ,mBAAkB,kBAAlB,mBAAkC,OAAM,QAAQ;AAAA,UAAA;AAAA,QAE3D;AAAA,MACF;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;AAgBpB;AAAA,MACE;AAAA,MACA,CAAC,gBAAgB;AACf,qBAAa,QAAQ;AAAA,UACnB,GAAG,aAAa;AAAA,UAChB,MAAM;AAAA,YACJ,MAAM,YAAY;AAAA,YAClB,OAAO,YAAY;AAAA,YACnB,OAAO,YAAY;AAAA,UACrB;AAAA,UACA,SAAS;AAAA,YACP,GAAG,aAAa,MAAM;AAAA;AAAA,YACtB,YAAY,YAAY;AAAA,YACxB,OAAO,YAAY;AAAA,YACnB,OAAO,YAAY;AAAA,UACrB;AAAA,UACA,UAAU;AAAA,YACR,GAAG,aAAa,MAAM;AAAA;AAAA,YACtB,YAAY,YAAY;AAAA,YACxB,OAAO,YAAY;AAAA,YACnB,OAAO,YAAY;AAAA,UACrB;AAAA,QAAA;AAAA,MAEJ;AAAA,MACA,EAAE,MAAM,KAAK;AAAA;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIf,MAAM,QAAQ,IAAS,EAAE;AACzB,MAAM,cAAc,IAAS,CAAA,CAAE;AAC/B,MAAM,kBAAkB,IAAS,EAAE;AACnC,MAAM,yBAAyB,IAAS,IAAI;AAC5C,MAAM,gBAAgB,IAAI,CAAC;AAEpB,MAAM,cAAc,MAAM;AAC/B,QAAM,mBAAmB,YAAY;AAC/B,QAAA,MAAM,MAAM,SAAS,GAAG;AACtB,UAAA;AACI,cAAA,WAAW,MAAM,MAAM;AAAA,UAC3B;AAAA,UACA;AAAA,YACE,OAAO,MAAM;AAAA,UACf;AAAA,UACA;AAAA,YACE,SAAS;AAAA,cACP,gBAAgB;AAAA,cAChB,QAAQ;AAAA,cACR,eAAe;AAAA,YACjB;AAAA,UACF;AAAA,QAAA;AAEU,oBAAA,QAAQ,SAAS,KAAK;AAAA,eAC3B,OAAO;AACN,gBAAA,MAAM,+BAA+B,KAAK;AAAA,MACpD;AAAA,IAAA,OACK;AACL,kBAAY,QAAQ;IACtB;AAAA,EAAA;AAGI,QAAA,mBAAmB,CAAC,eAAoB;AAC5C,UAAM,QAAQ,WAAW;AACzB,oBAAgB,QAAQ,KAAK,UAAU,WAAW,IAAI;AACtD,2BAAuB,QACrB,WAAW,KAAK,WAAW,WAAW,KAAK,UACvC,CAAC,WAAW,KAAK,SAAS,WAAW,KAAK,OAAO,IACjD;AACN,gBAAY,QAAQ;AAGG;EAAA;AAGzB,QAAM,yBAAyB,MAAM;AACnC,UAAM,cAAc,KAAK,MAAM,gBAAgB,KAAK;AACpD,QAAI,QAAQ;AAIV,QAAA,YAAY,iBAAiB,SAAS,QAAQ,KAC9C,YAAY,iBAAiB,SAAS,gBAAgB,GACtD;AACQ,cAAA,aAAa,QAAQ,6BAA6B,EAAE;AAAA,IAAA,OACvD;AACL,aAAO,KAAK,aAAa,OAAO,EAAE,QAAQ,CAAC,WAAgB;AACnD,cAAA,aAAa,aAAa,QAAQ,MAAM;AAC9C,YAAI,WAAW,UAAU,WAAW,OAAO,YAAY,IAAI,GAAG;AACpD,kBAAA,WAAW,OAAO,YAAY,IAAI;AAAA,QAC5C;AAAA,MAAA,CACD;AAAA,IACH;AAGI,QAAA,UAAU,KAAK,uBAAuB,OAAO;AAC/C,YAAM,eAAe,aAAa;AAClC,YAAM,aAAa;AAAA,QACjB,uBAAuB;AAAA,MAAA;AAEjB,cAAA,aAAa,aAAa,aAAa,aAAa;AAAA,IAC9D;AAEA,kBAAc,QAAQ;AAAA,EAAA;AAGlB,QAAA,mCAAmC,CAAC,gBAAkC;AAC1E,UAAM,oBAAoB;AACnB,WAAA;AAAA,EAAA;AAGF,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;;;;ACnEM,UAAA;AAAA,MACJ,OAAAA;AAAA,MACA,aAAAC;AAAA,MACA,eAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAAC;AAAA,QACE,YAAY;AACV,UAAA,EAAE,iBAAiB;AAEzB,UAAM,CAACA,gBAAe,GAAG,CAAC,eAAe;AACjC,YAAA,cAAc,KAAK,MAAM,UAAU;AACzC,mBAAa,QAAQ;AAAA,QACnB,GAAG,aAAa;AAAA,QAChB,UAAU;AAAA,UACR,GAAG,aAAa,MAAM;AAAA,UACtB,WAAW,GAAG,YAAY,oBAAoB,EAAE,IAC9C,YAAY,SAAS,EACvB;AAAA,UACA,MAAM,YAAY,QAAQ;AAAA,UAC1B,UAAU,YAAY,eAAe;AAAA,UACrC,SAAS,YAAY,oBAAoB;AAAA,UACzC,QAAQ,YAAY,oBAAoB;AAAA,UACxC,OAAOD,eAAc;AAAA,QACvB;AAAA,QACA,SAAS;AAAA,UACP,GAAG,aAAa,MAAM;AAAA,UACtB,WAAW,GAAG,YAAY,oBAAoB,EAAE,IAC9C,YAAY,SAAS,EACvB;AAAA,UACA,MAAM,YAAY,QAAQ;AAAA,UAC1B,UAAU,YAAY,eAAe;AAAA,UACrC,SAAS,YAAY,oBAAoB;AAAA,UACzC,QAAQ,YAAY,oBAAoB;AAAA,QAC1C;AAAA,MAAA;AAAA,IACF,CACD;;;;;;;;;;;;;;;;;;;;;;;AC9DM,SAAS,WAAW;AACnB,QAAA,EAAE,gBAAgB;AAClB,QAAA,gBAAgB,IAAI,IAAI;AAG9B,WAAS,qBAAqB;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,GACC;AAED,QAAI,cAAc,OAAO;AACnB,UAAA;AACF,sBAAc,MAAM;eACb,OAAO;AACN,gBAAA,MAAM,kCAAkC,KAAK;AAAA,MACvD;AACA,oBAAc,QAAQ;AAAA,IACxB;AAEA,UAAM,cAAc;AAAA,MAClB,cAAY,MAAM;AAAA,MAClB,SAAS;AAAA,MACT,cAAqB,SAAA,MAAM,aAAa;AAAA,MACxC,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,yBAAyB;AAAA,IAAA;AAGnB,YAAA,IAAI,YAAY,WAAW;AAC5B,IAAA,SAAA,MAAM,cAAc,aAAa;AAAA,MACtC,kBAAkB,YAAY;AAChB;MACd;AAAA,IAAA,CACD,EACE,KAAK,CAAC,mBAAmB;AACxB,oBAAc,QAAQ;AAGhB,YAAA,kBAA2B,SAAA,cAAc,iBAAiB;AAChE,UAAI,iBAAiB;AACL,sBAAA,MAAM,YAAY,iBAAiB;AAAA,UAC/C,MAAM,QAAQ,SAAS,OAAO,IACnB,SAAA,MAAM,WAAW,QACjB,SAAA,MAAM,WAAW;AAAA,UAC5B,OAAc,SAAA,MAAM,YAAY;AAAA,UAChC,OAAc,SAAA,MAAM,YAAY;AAAA,QAAA,CACjC;AAAA,MAAA,OACI;AACG,gBAAA,MAAM,mCAAmC,iBAAiB;AAAA,MACpE;AAGI,UAAA,QAAQ,SAAS,OAAO,GAAG;AACvB,cAAA,kBAA2B,SAAA,cAAc,iBAAiB;AAChE,YAAI,iBAAiB;AAEnB,0BAAgB,YAAY;AAEd,wBAAA,MAAM,YAAY,iBAAiB;AAAA,YAC/C,YAAmB,SAAA,MAAM,WAAW;AAAA,YACpC,aAAoB,SAAA,MAAM,YAAY;AAAA,YACtC,cAAc;AAAA,UAAA,CACf;AAAA,QAAA,OACI;AACG,kBAAA;AAAA,YACN;AAAA,YACA;AAAA,UAAA;AAAA,QAEJ;AAAA,MACF;AAAA,IAAA,CACD,EACA,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,0BAA0B,GAAG;AAAA,IAAA,CAC5C;AAAA,EACL;AAGA,WAAS,sBAAsB;AAC7B,QAAI,cAAc,OAAO;AACnB,UAAA;AACF,sBAAc,MAAM;eACb,OAAO;AACN,gBAAA,MAAM,kCAAkC,KAAK;AAAA,MACvD;AACA,oBAAc,QAAQ;AAAA,IACxB;AAAA,EACF;AAGS,WAAA,mBAAmB,mBAAmB,QAAQ,SAAS;AACxD,UAAA,kBAA2B,SAAA,cAAc,iBAAiB;AAE5D,QAAA,cAAc,SAAS,iBAAiB;AACtC,UAAA;AACY,sBAAA,MAAM,cAAc,eAAe;AAAA,eAC1C,OAAO;AACN,gBAAA,MAAM,+BAA+B,KAAK;AAAA,MACpD;AAAA,IACF;AAGA,yBAAqB,EAAE,QAAQ,SAAS,kBAAmB,CAAA;AAAA,EAC7D;AAEO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EAAA;AAEJ;;;;;AC/EA,UAAM,iBAAiB,IAAI,oCAAoC;AAC/D,UAAM,EAAE,aAAY,IAAK;AACzB,UAAM,EAAE,sBAAsB,wBAAwB;AACtD,UAAM,iBAAiB;AAAA,MACrB;AAAA,QACE,MAAM;AAAA,MACP;AAAA,MACD,EAAE,MAAM,YAAY,MAAM,iBAAkB;AAAA,IAC9C;AAGA,UAAM,qBAAqB,MAAM;AAC/B,YAAM,SAAS,aAAa,MAAM,SAAS;AAG3C;AAEA,UAAI,eAAe,UAAU,YAAY;AAEvC,6BAAqB;AAAA,UACnB;AAAA,UACA,SAAS,CAAC,OAAO;AAAA,UACjB,mBAAmB;AAAA;AAAA,UACnB,mBAAmB;AAAA;AAAA,QACzB,CAAK;AAAA,MACL,OAAS;AAEL,6BAAqB;AAAA,UACnB;AAAA,UACA,SAAS,CAAC,MAAM;AAAA,UAChB,mBAAmB;AAAA;AAAA,QACzB,CAAK;AAAA,MACF;AAAA,IACH;AAGA,UAAM,gBAAgB,MAAM;AAC1B;IACF,CAAC;AAGD;AAAA,MACE,MAAM,aAAa,MAAM;AAAA,MACzB,MAAM;AACJ;MACD;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0CA,UAAM,EAAE,OAAO,aAAa,IAAI,iBAAiB;AACjD,UAAM,EAAE,gBAAgB,gBAAgB,gBAAgB,aAAa;AAC/D,UAAA,EAAE,eAAAA,mBAAkB;AAEpB,UAAA,gBAAgB,IAAc,CAAA,CAAE;AAGhC,UAAA,mBAAmB,SAAS,MAAM;AAC/B,aAAA,cAAc,MAAM,SAAS;AAAA,IAAA,CACrC;AAGK,UAAA,iBAAiB,CAAC,MAAW,aAAqB;AACtD,WAAK,WAAW;AAChB,qBAAe,IAAI;AAAA,IAAA;AA8Bf,UAAA,gBAAgB,SAAS,MAAM;AAEjC,aAAA,MAAM,MAAM,SAAS,KAAK,cAAc,MAAM,WAAW,MAAM,MAAM;AAAA,IAAA,CAExE;AAGK,UAAA,aAAa,SAAS,MAAM;AAChC,aAAO,MAAM,MAAM,OAAO,CAAC,OAAY,SAAc;AAC5C,eAAA,QAAQ,KAAK,QAAQ,KAAK;AAAA,SAChC,CAAC;AAAA,IAAA,CACL;AAED,UAAM,uBAAuB,MAAM;AACjC,YAAM,YAAY,MAAM,MAAM,IAAI,CAAC,UAAe;AAAA,QAChD,YAAY,KAAK;AAAA,QACjB,MAAM,KAAK;AAAA,QACX,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,QACZ,WAAW,KAAK;AAAA,MAChB,EAAA;AAEF,YAAM,kBAAkB,MAAM,MAAM,OAAO,CAAC,OAAY,SAAc;AAC7D,eAAA,QAAQ,KAAK,QAAQ,KAAK;AAAA,SAChC,CAAC;AAEJ,mBAAa,QAAQ;AAAA,QACnB,GAAG,aAAa;AAAA,QAChB,YAAY;AAAA,QACZ,OAAO;AAAA,MAAA;AAAA,IACT;AAYF,UAAM,OAAO,sBAAsB,EAAE,MAAM,KAAM,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}