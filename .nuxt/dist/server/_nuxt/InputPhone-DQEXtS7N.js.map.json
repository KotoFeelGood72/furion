{"file":"InputPhone-DQEXtS7N.js","mappings":";;;;;;;;;;;;;;;AAWA,UAAM,QAAQ;AAed,UAAM,eAAe,SAAS,MAAM,MAAM,KAAK;AAC/C,UAAM,SAAS,SAAS,MAAM,MAAM,IAAI;AACxC,UAAM,SAAS,SAAS,MAAM,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfxC,UAAM,QAAQ;AAKd,UAAM,OAAO;AAEb,UAAM,aAAa,SAAS;AAAA,MAC1B,KAAK,MAAM,MAAM;AAAA,MACjB,KAAK,CAAC,aAAa,KAAK,qBAAqB,QAAQ;AAAA,IAAA,CACtD;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/ui/DefaultBtn.vue","../../../../components/ui/InputPhone.vue"],"sourcesContent":["<template>\r\n  <div class=\"button\" :class=\"['button', isColorSheme, isType, isSize]\">\r\n    <div class=\"btn-icon\" v-if=\"icon\">\r\n      <Icon :name=\"icon\" />\r\n    </div>\r\n    <p>{{ name }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { withDefaults, defineProps } from \"vue\";\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    type?: \"secondary\" | \"primary\";\r\n    color?: \"gray\" | \"brown\" | \"light\" | \"white\" | \"black\";\r\n    size?: \"xsmall\" | \"small\" | \"normal\" | \"xnormal\" | \"large\";\r\n    name: string;\r\n    icon?: string;\r\n  }>(),\r\n  {\r\n    type: \"secondary\",\r\n    color: \"light\",\r\n    name: \"Купить\",\r\n  }\r\n);\r\n\r\nconst isColorSheme = computed(() => props.color);\r\nconst isType = computed(() => props.type);\r\nconst isSize = computed(() => props.size);\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.button {\r\n  font-size: 1.8rem;\r\n  cursor: pointer;\r\n  font-family: $font_2;\r\n  transition: all 0.3s ease-in-out;\r\n  position: relative;\r\n  overflow: hidden;\r\n  @include flex-center;\r\n  gap: 1rem;\r\n  @include bp($point_2) {\r\n    width: 100%;\r\n  }\r\n\r\n  .btn-icon {\r\n    font-size: 2.6rem;\r\n    @include flex-center;\r\n  }\r\n  p {\r\n    z-index: 1;\r\n    position: relative;\r\n    line-height: 120%;\r\n  }\r\n  &.xsmall {\r\n    max-height: 4.2rem;\r\n    padding: 1rem;\r\n    p {\r\n      line-height: 21.6rem;\r\n    }\r\n  }\r\n  &.small {\r\n    max-height: 4.8rem;\r\n    padding: 1.3rem 4rem;\r\n  }\r\n  &.xnormal {\r\n    padding: 1.55rem 5.45rem;\r\n    max-height: 5.5rem;\r\n  }\r\n  &.normal {\r\n    padding: 1.7rem 5.05rem;\r\n    max-height: 5.8rem;\r\n  }\r\n  &.large {\r\n    padding: 2rem 6.9rem;\r\n    max-height: 6.9rem;\r\n    font-size: 2.4rem;\r\n    border-width: 0.2rem !important;\r\n    @include bp($point_2) {\r\n      font-size: 1.6rem;\r\n      padding: 1.8rem 3rem;\r\n    }\r\n  }\r\n  &.secondary {\r\n    border: 0.1rem solid;\r\n    &.gray {\r\n      border-color: $gray;\r\n    }\r\n    &.brown {\r\n      border-color: $brown;\r\n      color: $brown;\r\n      &:hover {\r\n        color: $white;\r\n        background-color: $brown;\r\n      }\r\n    }\r\n    &.white {\r\n      border-color: $white;\r\n      color: $white;\r\n      &:hover {\r\n        color: $brown;\r\n        background-color: $white;\r\n      }\r\n    }\r\n    &.black {\r\n      border-color: $black;\r\n      &:hover {\r\n        background-color: $black;\r\n        color: $white;\r\n      }\r\n    }\r\n  }\r\n  &.primary {\r\n    border: 0.1rem solid;\r\n    &.gray {\r\n      background-color: $gray;\r\n    }\r\n    &.brown {\r\n      background-color: $lbrown;\r\n      color: $white;\r\n      &:hover {\r\n        color: $white;\r\n        background-color: $brown;\r\n      }\r\n    }\r\n\r\n    &.white {\r\n      border-color: $white;\r\n      color: $white;\r\n      &:hover {\r\n        color: $brown;\r\n        background-color: $white;\r\n      }\r\n    }\r\n    &.black {\r\n      border-color: $black;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"phone_input\">\r\n    <input\r\n      v-model=\"localValue\"\r\n      v-mask=\"'# (###) ###-##-##'\"\r\n      :placeholder=\"placeholder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineEmits, defineProps } from \"vue\";\r\n\r\nconst props = defineProps<{\r\n  modelValue: any;\r\n  placeholder: string;\r\n}>();\r\n\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\n\r\nconst localValue = computed({\r\n  get: () => props.modelValue,\r\n  set: (newValue) => emit(\"update:modelValue\", newValue),\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.phone_input {\r\n  width: 100%;\r\n  input {\r\n    background-color: $white;\r\n    padding: 2rem;\r\n    border: 0.1rem solid #b2b2b2;\r\n    color: $gray;\r\n    width: 100%;\r\n    font-size: 1.6rem;\r\n    height: 6.1rem;\r\n    &::-webkit-input-placeholder {\r\n      color: $gray;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"version":3}